{"version":3,"sources":["firebase/firebaseInit.js","Reusable/error/error.js","Reusable/toast/toast.js","Reusable/Button/button.js","firebase/firebaseAuth.js","firebase/firebaseStorage.js","Reusable/textfield/textfield.js","components/signup/signup.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","storage","auth","firestore","Error","props","useState","openDialog","view","error","open","aria-labelledby","aria-describedby","id","onClick","setOpenDialog","color","Toast","toast","autoHideDuration","onClose","setToast","anchorOrigin","vertical","horizontal","severity","message","CustomButton","withStyles","theme","root","backgroundImage","fontSize","padding","borderColor","outline","Button","CreateUserWithEmailAndPassword","a","Firebase","createUserWithEmailAndPassword","email","password","then","response","currentUser","user","sendEmailVerification","alert","catch","signInWithEmailAndPassword","updateProfile","displayName","name","photoURL","imageAsURL","code","errorMessage","flag","UploadProfileImage","dispatch","useDispatch","setError","setMessage","imgUrl","setImageAsUrl","handleError","useEffect","setLoading","ref","imageAsFile","put","on","snapShot","err","child","getDownloadURL","fireBaseUrl","prevObject","imageUrl","window","setTimeout","setImageFlag","CssTextField","borderBottomColor","width","TextField","Signup","history","useHistory","imgURL","useSelector","selector","setEmail","setPassword","confirmPassword","setConfirmPassword","setName","username","setUsername","setImageAsFile","loading","imageFlag","toastMessage","setToastMessage","handleImage","event","image","target","files","imageFile","handleCustomSignup","emailCheck","document","getElementById","focus","test","length","status","push","Container","maxWidth","className","Grid","container","spacing","item","xs","sm","style","paddingTop","variant","type","label","onChange","value","required"],"mappings":"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","file":"static/js/15.684f850d.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/storage'\r\nimport 'firebase/auth'\r\nimport \"firebase/firestore\";\r\n\r\n  const firebaseConfig = {\r\n  apiKey: \"AIzaSyB9hQPydW-uVyj7SiM9f9VgDedXo3u8Je8\",\r\n  authDomain: \"knowyourplant-fab64.firebaseapp.com\",\r\n  projectId: \"knowyourplant-fab64\",\r\n  storageBucket: \"knowyourplant-fab64.appspot.com\",\r\n  messagingSenderId: \"529581781346\",\r\n  appId: \"1:529581781346:web:6c34f63101bf423f7cfc3b\"\r\n};\r\n    // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  const storage = firebase.storage()\r\n  const auth=firebase.auth()\r\n  const firestore = firebase.firestore();\r\n//analytics is optional for this tutoral \r\n\r\n\r\nexport  {\r\n   storage,auth,firestore, firebase as default\r\n }\r\n","import React,{useState,useEffect} from 'react';\r\nimport {Dialog,DialogTitle,DialogContent,DialogActions,Button} from '@material-ui/core';\r\n\r\nconst Error=(props)=>{\r\n\tconst [view,setView] = useState(props.openDialog);\r\n\tconst [error,setError] = useState(props.error);\r\n\r\n\treturn(<Dialog\r\n        open={view}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">Oops !</DialogTitle>\r\n        <DialogContent>\r\n            {error}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>props.setOpenDialog(false)} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>)\r\n}\r\n\r\nexport default Error;","import Alert from '@material-ui/lab/Alert';\r\nimport React ,{useState,useEffect} from 'react';\r\nimport {Snackbar} from '@material-ui/core';\r\n\r\nconst Toast=(props)=>{\r\n\r\n  return(<Snackbar open={props.toast} autoHideDuration={3000} onClose={()=>props.setToast(false)} anchorOrigin={{vertical:'top',horizontal:'center'}}>\r\n          <Alert onClose={()=>props.setToast(false)} severity=\"success\">\r\n            {props.message}\r\n          </Alert>\r\n        </Snackbar>)\r\n}\r\n\r\nexport default Toast;","import {Button,withStyles} from \"@material-ui/core\";\r\n\r\nexport const CustomButton = withStyles((theme) => ({\r\n  root: {\r\n    color:'white',\r\n    backgroundImage:'linear-gradient(to right,#ff6666,#ff6666)',\r\n    fontSize:'18px',\r\n    padding:'5px',\r\n    '&:focus':{\r\n    \tborderColor:'none',\r\n    \toutline:'none',\r\n    }\r\n  },\r\n}))(Button);\r\n","import React,{useState,useEffect} from 'react';\r\nimport Firebase from \"./firebaseInit\";\r\nimport {auth} from './firebaseInit';\r\nimport \"firebase/auth\";\r\n\r\nexport const CreateUserWithEmailAndPassword=async(props)=> {\r\n\r\n    const flag = await Firebase.auth().createUserWithEmailAndPassword(props.email,props.password)\r\n\t  .then(async(response) => {\r\n\t  \t//get the careated user ...\r\n\t  \tlet user = await Firebase.auth().currentUser;\r\n\t  \t//send email for verification...\r\n\t\tconst check = await user.sendEmailVerification().then(function(response) {\r\n\t\t  // Email sent.\r\n\t\t  alert(\"A verification email has been sent, Kindly Check your email.\");\r\n\t\t  return(response)\r\n\t\t}).catch(function(error) {\r\n\t\t\talert(error.message)\r\n\t\t  return(error)\r\n\t\t});\r\n\r\n\t\tconst signin = Firebase.auth().signInWithEmailAndPassword(props.email,props.password)\r\n\t\tuser.updateProfile({\r\n\t\tdisplayName:props.name,\r\n\t\tphotoURL: props.imageAsURL,\r\n\t\t})  \r\n\r\n\t\treturn(\"User created\");\r\n\t  })\r\n\t  .catch((error) => {\r\n\t    var errorCode = error.code;\r\n\t    var errorMessage = error.message;\r\n\t    // ..\r\n\t    alert(errorMessage);\r\n\t    return(errorMessage);\r\n\t  });\r\n\r\n\treturn(flag);\r\n}\r\n\r\n","import React,{useState,useEffect} from 'react';\r\nimport {storage} from './firebaseInit';\r\nimport Loader from '../Reusable/loader/loader';\r\nimport Error from '../Reusable/error/error';\r\nimport Toast from '../Reusable/toast/toast';\r\nimport {imageUrl} from '../redux/slice';\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\nconst UploadProfileImage=(props)=>{\r\n  const dispatch = useDispatch();\r\n  const [openDialog,setOpenDialog] = useState(false);\r\n  const [error,setError] = useState();\r\n  const [toast,setToast] = useState(false);\r\n  const [message,setMessage] = useState()\r\n\tconst allInputs = {imgUrl: ''};\r\n\tconst [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n    \r\n    const handleError=(props)=>{\r\n      setError(props);\r\n      setOpenDialog(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n      props.setLoading(true);\r\n      const uploadTask = storage.ref(`/images/${props.imageAsFile.name}`).put(props.imageAsFile)\r\n      uploadTask.on('state_changed', \r\n        (snapShot) => {\r\n          //takes a snap shot of the process as it is happening\r\n        }, (err) => {\r\n          //catches the errors\r\n          handleError(err);\r\n        }, () => {\r\n          // gets the functions from storage refences the image storage in firebase by the children\r\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n          storage.ref('images').child(props.imageAsFile.name).getDownloadURL()\r\n           .then(fireBaseUrl => {\r\n            props.setLoading(false);\r\n             setMessage(\"Upload Successful\");\r\n             setToast(true);\r\n             setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}));\r\n             dispatch(imageUrl(fireBaseUrl));\r\n             window.setTimeout(()=>{props.setImageFlag(false)},3000);\r\n           })\r\n           .catch((error)=>{\r\n            props.setLoading(false);\r\n            handleError(error);\r\n           });\r\n        })\r\n    },[])\r\n    return(\r\n      <div>\r\n    {\r\n      openDialog ? <Error openDialog={openDialog} error={error} setOpenDialog={setOpenDialog}/> :null\r\n    }\r\n    {\r\n      toast ? <Toast toast={toast} setToast={setToast} message={message}/> : null\r\n    }\r\n    </div>\r\n      )\r\n}\r\nexport default UploadProfileImage;","import {TextField,withStyles} from '@material-ui/core';\r\n\r\nexport const CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'white',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'white',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'white',\r\n        width:'100%',\r\n      },\r\n    },\r\n  },\r\n})(TextField);","import React,{useState,useEffect} from \"react\";\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport {Container,Card,TextField,IconButton,CardContent,\r\nCardHeader,CardActions,Typography,Grid,Box} from '@material-ui/core';\r\nimport {Form} from \"react-bootstrap\";\r\nimport {CreateUserWithEmailAndPassword} from '../../firebase/firebaseAuth';\r\nimport Loader from '../../Reusable/loader/loader';\r\nimport Error from '../../Reusable/error/error';\r\nimport Toast from '../../Reusable/toast/toast';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {handleSignupWithGoogle} from '../../firebase/firebaseAuth';\r\nimport {handleSignupWithFacebook} from '../../firebase/firebaseAuth';\r\nimport {handleSignupWithTwitter} from '../../firebase/firebaseAuth';\r\nimport {handleSignupWithGithub} from '../../firebase/firebaseAuth';\r\nimport UploadProfileImage from '../../firebase/firebaseStorage';\r\nimport {useSelector} from 'react-redux';\r\nimport {selector} from '../../redux/slice';\r\nimport {CssTextField} from '../../Reusable/textfield/textfield';\r\nimport {CustomButton} from '../../Reusable/Button/button';\r\nimport './signup.css';\r\n\r\nexport default function Signup(props) {\r\n    const history = useHistory();\r\n    const imgURL = useSelector(selector);\r\n    const [email,setEmail] = useState();\r\n    const [password,setPassword] = useState();\r\n    const [confirmPassword,setConfirmPassword] = useState();\r\n    const [name,setName] = useState();\r\n    const [username,setUsername] = useState();\r\n    const [imageAsFile,setImageAsFile] = useState();\r\n    const [loading,setLoading] = useState(false);\r\n    const [openDialog,setOpenDialog] = useState(false);\r\n    const [error,setError] = useState();\r\n    const [toast,setToast] = useState(false);\r\n    const [imageFlag,setImageFlag] = useState(false);\r\n    const [toastMessage,setToastMessage] = useState();\r\n\r\n    const handleError=(props)=>{\r\n      setLoading(false);\r\n      setError(props);\r\n      setOpenDialog(true);\r\n    }\r\n\r\n    const handleImage=async(event)=>{\r\n      const image = event.target.files[0]\r\n      await setImageAsFile(imageFile => (image))\r\n    }\r\n    const handleCustomSignup=async()=>{\r\n      setLoading(true);\r\n      const emailCheck = /\\S+@\\S+\\.\\S+/;\r\n\r\n      if (!name) {\r\n        document.getElementById('name').focus();\r\n        return(handleError(\"Error, must provide a name.\"));\r\n      }\r\n      if (!emailCheck.test(email)) {\r\n        document.getElementById('email').focus();\r\n        return(handleError(\"Error, email format not valid.\"));\r\n      }\r\n      if(password && confirmPassword){\r\n        if (password.length<6) {\r\n        if(password != confirmPassword || true){\r\n        document.getElementById('password').focus();\r\n        return(handleError(\"Error, Password does not match or Password length is too short(minimum 6 digits.)\"));\r\n      }\r\n      }\r\n    }\r\n    else{\r\n        if (!confirmPassword) {\r\n        document.getElementById('confirmPassword').focus();\r\n        return(handleError(\"Confirm Password does not match\"));\r\n        }\r\n        document.getElementById('password').focus();\r\n        return(handleError(\"Please enter password\"));\r\n      }\r\n      const user = {\r\n        name:name,\r\n        email:email,\r\n        password:password,\r\n        imageAsURL:imgURL,\r\n        username:username\r\n      }\r\n      const status = await CreateUserWithEmailAndPassword(user);\r\n\r\n      switch(status){\r\n        case \"User created\":\r\n        setLoading(false)\r\n        setToast(true)\r\n        setToastMessage(\"Signup Successful\");\r\n        window.setTimeout(()=>{\r\n          history.push(\"/user/\"+name);\r\n        },2000)\r\n        break;\r\n        default:\r\n        setLoading(false)\r\n        setError(status)\r\n        setOpenDialog(true)\r\n      }\r\n    }\r\n\r\n    const handleFirebaseImageUpload = ()=>{\r\n      setImageFlag(true);\r\n    }\r\n\treturn(\r\n    <Container maxWidth=\"xl\" className=\"container2\">\r\n      <header className=\"head\">\r\n        <h3> Welcome , Register Yourself here</h3>\r\n      </header>\r\n\t\t<Grid container spacing={3} className=\"form\">\r\n\t\t  <Grid item xs={12} sm={3} style={{paddingTop:'2%'}}>\r\n\t\t  <label> Name</label>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3}>\r\n\t\t  <CssTextField id=\"name\" variant=\"outlined\" type=\"text\" label=\"name\" onChange={(event)=>setName(event.target.value)} required/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12} sm={3} style={{paddingTop:'2%'}}>\r\n\t\t  <label> Email</label>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3}>\r\n\t\t  <CssTextField id=\"email\" variant=\"outlined\" onChange={(event)=>setEmail(event.target.value)} type=\"email\" label=\"email\" required/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12} sm={3} style={{paddingTop:'2%'}}>\r\n\t\t  <label> User Name(optional)</label>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3}>\r\n\t\t  <CssTextField id=\"username\" variant=\"outlined\" onChange={(event)=>setUsername(event.target.value)} type=\"text\" label=\"username\"/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12} sm={3} style={{paddingTop:'2%'}}>\r\n\t\t  <label>Password</label>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3}>\r\n\t\t  <CssTextField id=\"password\" variant=\"outlined\" onChange={(event)=>setPassword(event.target.value)} type=\"password\" label=\"password\"/>\r\n\t\t  </Grid>\r\n\t\t  <Grid item xs={12} sm={3} style={{paddingTop:'2%'}}>\r\n\t\t  <label>Confirm Password</label>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3}>\r\n\t\t  <CssTextField id=\"confirmPassword\" variant=\"outlined\" onChange={(event)=>setConfirmPassword(event.target.value)} type=\"password\" label=\"password\"/>\r\n\t\t  </Grid>\r\n      <Grid item xs={12} sm={12}>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3} style={{paddingTop:'2%'}}>\r\n      <label>Upload Profile Image(optional)</label>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n      <CssTextField id=\"image\" variant=\"outlined\" onChange={handleImage} type=\"file\"/>\r\n      </Grid>\r\n      <Grid item xs={12} sm={3} style={{paddingTop:'2%'}}>\r\n      <CustomButton onClick={handleFirebaseImageUpload}>Upload</CustomButton>\r\n      </Grid>\r\n\t\t  <Grid item xs={12} sm={12} style={{paddingTop:'5%'}}>\r\n\t\t  <CustomButton onClick={handleCustomSignup}>Register</CustomButton>\r\n\t\t  </Grid>\r\n\t\t</Grid>\r\n    {\r\n      loading ? <Loader/>:null\r\n    }\r\n    {\r\n      openDialog ? <Error openDialog={openDialog} error={error} setOpenDialog={setOpenDialog}/> :null\r\n    }\r\n    {\r\n      toast ? <Toast toast={toast} setToast={setToast} message={toastMessage} /> : null\r\n    }\r\n    {\r\n      imageFlag ? <UploadProfileImage loading={loading} setLoading={setLoading} imageAsFile={imageAsFile} setImageFlag={setImageFlag}/> :null\r\n    }\r\n\t\t</Container>\r\n)\r\n}"],"sourceRoot":""}